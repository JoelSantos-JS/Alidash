const { createClient } = require('@supabase/supabase-js')
require('dotenv').config({ path: '.env.local' })

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.SUPABASE_SERVICE_ROLE_KEY
)

async function checkGoalsStructure() {
  try {
    console.log('üîç Verificando estrutura da tabela goals...\n')

    // Tentar inserir uma meta simples para ver quais campos s√£o obrigat√≥rios
    const testGoal = {
      user_id: 'test-user-id',
      name: 'Meta Teste',
      description: 'Teste de estrutura',
      category: 'financial',
      type: 'savings',
      target_value: 1000,
      unit: 'BRL',
      deadline: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),
      priority: 'medium',
      status: 'active'
    }

    console.log('üß™ Testando inser√ß√£o com campos b√°sicos...')
    const { data, error } = await supabase
      .from('goals')
      .insert(testGoal)
      .select()

    if (error) {
      console.log('‚ùå Erro na inser√ß√£o:', error)
      console.log('\nüìã Detalhes do erro:')
      console.log('- Code:', error.code)
      console.log('- Message:', error.message)
      console.log('- Details:', error.details)
      console.log('- Hint:', error.hint)
    } else {
      console.log('‚úÖ Inser√ß√£o bem-sucedida!')
      console.log('üìÑ Dados inseridos:', data)
      
      // Limpar o teste
      if (data && data[0]) {
        await supabase
          .from('goals')
          .delete()
          .eq('id', data[0].id)
        console.log('üßπ Dados de teste removidos')
      }
    }

    // Tentar buscar uma meta existente para ver a estrutura
    console.log('\nüîç Buscando metas existentes para ver estrutura...')
    const { data: existingGoals, error: fetchError } = await supabase
      .from('goals')
      .select('*')
      .limit(1)

    if (fetchError) {
      console.log('‚ùå Erro ao buscar metas:', fetchError)
    } else if (existingGoals && existingGoals.length > 0) {
      console.log('‚úÖ Meta encontrada! Estrutura:')
      console.log(JSON.stringify(existingGoals[0], null, 2))
    } else {
      console.log('‚ÑπÔ∏è Nenhuma meta encontrada na tabela')
    }

  } catch (error) {
    console.error('‚ùå Erro:', error)
  }
}

checkGoalsStructure()