// Teste da API de d√≠vidas do Supabase
require('dotenv').config();

const testDebtsAPI = async () => {
  console.log('üß™ Testando API de d√≠vidas do Supabase...');
  
  const baseUrl = 'http://localhost:3000';
  const testUserId = '1sAltLnRMgO3ZCYnh4zn9iFck0B3'; // Firebase UID de teste
  
  try {
    // 1. Testar busca de d√≠vidas
    console.log('\n1Ô∏è‚É£ Testando busca de d√≠vidas...');
    const getResponse = await fetch(`${baseUrl}/api/debts/get?user_id=${testUserId}`);
    
    if (getResponse.ok) {
      const getData = await getResponse.json();
      console.log('‚úÖ Busca de d√≠vidas:', {
        success: getData.success,
        count: getData.debts?.length || 0,
        debts: getData.debts?.slice(0, 2) // Mostrar apenas as 2 primeiras
      });
    } else {
      console.log('‚ùå Erro na busca:', getResponse.status, await getResponse.text());
    }
    
    // 2. Testar cria√ß√£o de d√≠vida
    console.log('\n2Ô∏è‚É£ Testando cria√ß√£o de d√≠vida...');
    const testDebt = {
      creditorName: 'Teste Credor',
      description: 'D√≠vida de teste via API',
      originalAmount: 1000,
      currentAmount: 1000,
      interestRate: 2.5,
      dueDate: new Date('2024-12-31').toISOString(),
      category: 'personal',
      priority: 'medium',
      status: 'pending',
      paymentMethod: 'pix',
      notes: 'Criado via teste automatizado',
      tags: ['teste', 'api']
    };
    
    const createResponse = await fetch(`${baseUrl}/api/debts/create`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        user_id: testUserId,
        debt: testDebt
      })
    });
    
    if (createResponse.ok) {
      const createData = await createResponse.json();
      console.log('‚úÖ Cria√ß√£o de d√≠vida:', {
        success: createData.success,
        debtId: createData.debt?.id,
        creditorName: createData.debt?.creditorName
      });
    } else {
      console.log('‚ùå Erro na cria√ß√£o:', createResponse.status, await createResponse.text());
    }
    
    // 3. Verificar novamente as d√≠vidas
    console.log('\n3Ô∏è‚É£ Verificando d√≠vidas ap√≥s cria√ß√£o...');
    const finalResponse = await fetch(`${baseUrl}/api/debts/get?user_id=${testUserId}`);
    
    if (finalResponse.ok) {
      const finalData = await finalResponse.json();
      console.log('‚úÖ Verifica√ß√£o final:', {
        success: finalData.success,
        totalDebts: finalData.debts?.length || 0
      });
    }
    
    console.log('\nüéâ Teste da API de d√≠vidas conclu√≠do!');
    
  } catch (error) {
    console.error('‚ùå Erro durante o teste:', error.message);
  }
};

// Executar teste
testDebtsAPI();